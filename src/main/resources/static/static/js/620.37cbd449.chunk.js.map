{"version":3,"file":"static/js/620.37cbd449.chunk.js","mappings":"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","sources":["components/ToDoUpdate.js","services/api.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getTodoById, updateTodo } from \"../services/api\"; // 정확한 이름으로 import\r\n\r\nconst ToDoUpdate = () => {\r\n  const { id } = useParams(); // URL에서 ID 추출\r\n  const [title, setTitle] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Fetch data from the server\r\n  useEffect(() => {\r\n    const fetchToDo = async () => {\r\n      try {\r\n        const response = await getTodoById(id); // 정확한 API 호출\r\n        const { title, date, time, description } = response.data;\r\n\r\n        setTitle(title || \"\");\r\n        setDate(date || \"\");\r\n        setTime(time || \"\");\r\n        setDescription(description || \"\");\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error fetching ToDo:\", error);\r\n        setErrorMessage(\"Failed to load ToDo. Please try again.\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchToDo();\r\n    }\r\n  }, [id]);\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const toDoDTO = {\r\n      title,\r\n      date,\r\n      time,\r\n      description,\r\n    };\r\n\r\n    try {\r\n      // Call backend API to update ToDo\r\n      await updateTodo(id, toDoDTO); // 정확한 API 호출\r\n      setSuccessMessage(\"ToDo updated successfully!\");\r\n      setErrorMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error updating ToDo:\", error);\r\n      setErrorMessage(\"Failed to update ToDo. Please try again.\");\r\n      setSuccessMessage(\"\");\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <Spinner color=\"primary\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n            <i className=\"bi bi-pencil-square me-2\"> </i>\r\n            Update ToDo\r\n          </CardTitle>\r\n          <CardBody>\r\n            {errorMessage && <Alert color=\"danger\">{errorMessage}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"title\">Title</Label>\r\n                <Input\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  placeholder=\"Enter title\"\r\n                  type=\"text\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"date\">Date</Label>\r\n                <Input\r\n                  id=\"date\"\r\n                  name=\"date\"\r\n                  type=\"date\"\r\n                  value={date}\r\n                  onChange={(e) => setDate(e.target.value)}\r\n                  required\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"time\">Time</Label>\r\n                <Input\r\n                  id=\"time\"\r\n                  name=\"time\"\r\n                  type=\"time\"\r\n                  value={time}\r\n                  onChange={(e) => setTime(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"description\">Description</Label>\r\n                <Input\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  type=\"textarea\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n            {successMessage && (\r\n              <Alert color=\"success\" className=\"mt-3\">\r\n                {successMessage}\r\n              </Alert>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ToDoUpdate;\r\n","import axios from 'axios';\r\n\r\nconst API_BASE_URL = \"/api/todo\";\r\n\r\n// 모든 ToDo 조회\r\nexport const getAllTodos = async () => {\r\n    return await axios.get(API_BASE_URL);\r\n};\r\n\r\n// 특정 ToDo 조회\r\nexport const getTodoById = async (id) => {\r\n    return await axios.get(`${API_BASE_URL}/${id}`);\r\n};\r\n\r\n// ToDo 생성\r\nexport const createToDo = async (todo) => {\r\n    return await axios.post(`${API_BASE_URL}`, todo);\r\n};\r\n\r\n// ToDo 업데이트\r\nexport const updateTodo = async (id, todo) => {\r\n    return await axios.put(`${API_BASE_URL}/${id}`, todo);\r\n};\r\n\r\n// ToDo 삭제\r\nexport const deleteTodo = async (id) => {\r\n    return await axios.delete(`${API_BASE_URL}/${id}`);\r\n};\r\n"],"names":["ToDoUpdate","id","useParams","title","setTitle","useState","date","setDate","time","setTime","description","setDescription","successMessage","setSuccessMessage","errorMessage","setErrorMessage","isLoading","setIsLoading","useEffect","async","response","getTodoById","data","error","console","fetchToDo","_jsx","className","children","Spinner","color","Row","Col","_jsxs","Card","CardTitle","tag","CardBody","Alert","Form","onSubmit","e","preventDefault","toDoDTO","updateTodo","FormGroup","Label","for","Input","name","placeholder","type","value","onChange","target","required","Button","API_BASE_URL","getAllTodos","axios","get","concat","createToDo","post","todo","put"],"sourceRoot":""}